{"version":3,"sources":["context/TaskListContext.js","components/Task.js","components/TaskList.js","components/TaskForm.js","components/Header.js","components/App.js","index.js"],"names":["TaskListContext","createContext","TaskListContextProvider","props","initialState","JSON","parse","localStorage","getItem","useState","tasks","setTask","editItem","setEditItem","useEffect","setItem","stringify","Provider","value","addTask","title","id","uuid","removeTask","filter","task","clearList","findItem","item","find","editTask","newTasks","map","children","Task","useContext","className","style","marginRight","onClick","TaskList","length","key","TaskForm","setTitle","console","log","onSubmit","e","preventDefault","type","placeholder","onChange","target","required","Header","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d907192a.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect} from 'react'\r\nimport {v1 as uuid} from 'uuid'\r\n\r\nexport const TaskListContext = createContext();\r\n\r\nconst TaskListContextProvider = props => {\r\n\tconst initialState = JSON.parse(localStorage.getItem('tasks')) || [];\r\n\tconst [tasks, setTask] = useState(initialState);\r\n\tconst [ editItem, setEditItem ] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n\t}, [tasks]);\r\n\r\n\t// Adding task functionality\r\n\tconst addTask = (title) => {\r\n\t\tsetTask([...tasks, {title, id:uuid()}])\r\n\t}\r\n\r\n\tconst removeTask = id => {\r\n\t\tsetTask(tasks.filter(task => task.id !== id));\r\n\t}\r\n\r\n\tconst clearList = () => {\r\n\t\tsetTask([]);\r\n\t}\r\n\r\n\tconst findItem = id => {\r\n\t\tconst item = tasks.find(task => task.id === id);\r\n\t\tsetEditItem(item);\r\n\t}\r\n\r\n\tconst editTask = (title, id) => {\r\n\t\tconst newTasks = tasks.map(task => (task.id === id ? {title, id} : task))\r\n\t\tsetTask(newTasks);\r\n\t\tsetEditItem(null);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<TaskListContext.Provider value={{tasks, addTask, removeTask, clearList, findItem, editTask, editItem}}>\r\n\t\t\t{props.children}\r\n\t\t</TaskListContext.Provider>\r\n\t)\r\n};\r\n\r\nexport default TaskListContextProvider;\r\n","import React, { useContext } from 'react'\r\nimport { TaskListContext } from '../context/TaskListContext'\r\n\r\nconst Task = ({ task }) => {\r\n\tconst {removeTask, findItem} = useContext(TaskListContext);\r\n\r\n\treturn (\r\n\t\t<li className=\"list-item\">\r\n\t\t\t<span>{task.title}</span>\r\n\t\t\t<div>\r\n\t\t\t\t<button className=\"btn-delete task-btn\" style={{marginRight: \"10px\"}} \r\n\t\t\t\tonClick={() => removeTask(task.id)}>\r\n\t\t\t\t\t<i className=\"fas fa-trash-alt\"></i>\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className=\"btn-edit task-btn\" onClick={() => findItem(task.id)}>\r\n\t\t\t\t\t<i className=\"fas fa-pen\"></i>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t)\r\n}\r\n\r\nexport default Task;\r\n","import React, { useContext } from 'react'\r\nimport { TaskListContext } from '../context/TaskListContext'\r\nimport Task from './Task';\r\n\r\nconst TaskList = () => {\r\n\tconst { tasks } = useContext(TaskListContext);\r\n\t\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{tasks.length ? (\r\n\t\t\t\t<ul className=\"list\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttasks.map((task) => {\r\n\t\t\t\t\t\t\treturn <Task task={task} key={task.id}/>;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</ul>\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"no-tasks\"> No Tasks </div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default TaskList\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport {TaskListContext} from '../context/TaskListContext';\r\n\r\nconst TaskForm = () => {\r\n\tconst { addTask, clearList, editItem, editTask } = useContext(TaskListContext);\r\n\tconst [ title, setTitle ] = useState(\"\");\r\n\r\n\tconst handleChange = e => {\r\n\t\tsetTitle(e.target.value);\r\n\t};\r\n\r\n\tconst handleSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\tif (!editItem){\r\n\t\t\taddTask(title);\r\n\t\t\tsetTitle(\"\");\r\n\t\t} else {\r\n\t\t\teditTask(title, editItem.id);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (editItem) {\r\n\t\t\tsetTitle(editItem.title);\r\n\t\t\tconsole.log(editItem)\r\n\t\t} else {\r\n\t\t\tsetTitle(\"\");\r\n\t\t}\r\n\t}, [editItem])\r\n\r\n\treturn (\r\n\t\t<form className=\"form\" onSubmit={handleSubmit}>\r\n\t\t\t<input \r\n\t\t\t\ttype=\"text\" \r\n\t\t\t\tclassName=\"task-input\" \r\n\t\t\t\tplaceholder=\"Add Task...\" \r\n\t\t\t\tonChange={handleChange} \r\n\t\t\t\tvalue={title}\r\n\t\t\t\trequired\r\n\t\t\t/>\r\n\t\t\t<div className=\"buttons\">\r\n\t\t\t\t<button className=\"btn add-task-btn\" type=\"submit\">\r\n\t\t\t\t\t{editItem ? 'Edit Task' : 'Add Task'}\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className=\"btn clear-btn\" onClick={clearList} type=\"button\"> Clear </button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default TaskForm\r\n","import React from 'react'\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<div className=\"header\">\r\n\t\t\t<h1>Task Manager</h1>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport TaskList from './TaskList'\r\nimport TaskForm from './TaskForm'\r\nimport Header from './Header'\r\nimport TaskListContextProvider from '../context/TaskListContext';\r\nimport '../App.css'\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<TaskListContextProvider>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"app-wrapper\">\r\n\t\t\t\t\t<Header />\r\n\t\t\t\t\t<div className=\"main\">\r\n\t\t\t\t\t\t<TaskForm />\r\n\t\t\t\t\t\t<TaskList />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</TaskListContextProvider>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}